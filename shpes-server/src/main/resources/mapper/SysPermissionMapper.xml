<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shpes.mapper.SysPermissionMapper">
    
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.shpes.entity.SysPermission">
        <id column="id" property="id"/>
        <result column="permission_name" property="permissionName"/>
        <result column="permission_code" property="permissionCode"/>
        <result column="permission_type" property="permissionType"/>
        <result column="parent_id" property="parentId"/>
        <result column="path" property="path"/>
        <result column="component" property="component"/>
        <result column="icon" property="icon"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 获取权限树形结构 -->
    <select id="getPermissionTree" resultMap="PermissionTreeMap">
        WITH RECURSIVE perm_tree AS (
            SELECT *
            FROM sys_permission
            WHERE parent_id = 0 OR parent_id IS NULL
            UNION ALL
            SELECT p.*
            FROM sys_permission p
            INNER JOIN perm_tree t ON p.parent_id = t.id
        )
        SELECT * FROM perm_tree ORDER BY id
    </select>

    <!-- 权限树形结构映射 -->
    <resultMap id="PermissionTreeMap" type="com.shpes.vo.PermissionTreeVO" extends="BaseResultMap">
        <collection property="children" ofType="com.shpes.vo.PermissionTreeVO" column="id" select="getChildPermissions"/>
    </resultMap>

    <!-- 获取子权限列表 -->
    <select id="getChildPermissions" resultMap="PermissionTreeMap">
        SELECT *
        FROM sys_permission
        WHERE parent_id = #{id}
        ORDER BY id
    </select>

    <!-- 获取用户权限列表 -->
    <select id="getUserPermissions" resultMap="BaseResultMap">
        SELECT DISTINCT p.*
        FROM sys_permission p
        INNER JOIN sys_role_permission rp ON p.id = rp.permission_id
        INNER JOIN sys_user_role ur ON rp.role_id = ur.role_id
        WHERE ur.user_id = #{userId}
        AND p.status = 1
        ORDER BY p.id
    </select>

    <!-- 获取角色权限列表 -->
    <select id="getRolePermissions" resultMap="BaseResultMap">
        SELECT p.*
        FROM sys_permission p
        INNER JOIN sys_role_permission rp ON p.id = rp.permission_id
        WHERE rp.role_id = #{roleId}
        AND p.status = 1
        ORDER BY p.id
    </select>

    <!-- 批量更新权限状态 -->
    <update id="batchUpdateStatus">
        UPDATE sys_permission
        SET status = #{status},
            update_time = NOW()
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>